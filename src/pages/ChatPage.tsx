
import { useState, useEffect, useRef } from "react";
import Header from "@/components/Header";
import ChatMessage from "@/components/ChatMessage";
import MessageInput from "@/components/MessageInput";
import VoiceButton from "@/components/VoiceButton";
import { Message, Language, ChatState } from "@/types";
import { useSpeechRecognition } from "@/utils/speechRecognition";
import { v4 as uuidv4 } from "uuid";

export default function ChatPage() {
  const [chatState, setChatState] = useState<ChatState>({
    messages: [],
    isLoading: false,
    language: 'english'
  });
  
  const [isListening, setIsListening] = useState(false);
  const [transcript, setTranscript] = useState("");
  const messagesEndRef = useRef<HTMLDivElement>(null);
  const speechRecognition = useSpeechRecognition();
  const [apiKey, setApiKey] = useState<string | null>(null);

  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });
  };

  useEffect(() => {
    scrollToBottom();
  }, [chatState.messages]);

  const handleLanguageChange = (newLanguage: Language) => {
    setChatState(prev => ({ ...prev, language: newLanguage }));
  };

  const addMessage = (content: string, role: 'user' | 'assistant', audioUrl?: string) => {
    const newMessage: Message = {
      id: uuidv4(),
      content,
      role,
      audioUrl
    };
    
    setChatState(prev => ({
      ...prev,
      messages: [...prev.messages, newMessage]
    }));
  };

  const handleSendMessage = async (content: string) => {
    // Add user message
    addMessage(content, 'user');
    
    // Set loading state
    setChatState(prev => ({ ...prev, isLoading: true }));
    
    try {
      // This would be an API call to your backend
      // For now, we'll mock a response
      setTimeout(() => {
        const response = chatState.language === 'english' 
          ? "I'm your AI Sachiv assistant. How can I help you today with your Gram Panchayat responsibilities?"
          : "मैं आपका एआई सचिव सहायक हूँ। आज मैं आपकी ग्राम पंचायत की जिम्मेदारियों में कैसे मदद कर सकता हूँ?";
          
        // Add mock audio URL (would be generated by ElevenLabs in production)
        const mockAudioUrl = "https://example.com/audio.mp3";
        
        // Add assistant message with audio
        addMessage(response, 'assistant', mockAudioUrl);
        
        // Set loading state to false
        setChatState(prev => ({ ...prev, isLoading: false }));
      }, 1000);
    } catch (error) {
      console.error('Error sending message:', error);
      setChatState(prev => ({ ...prev, isLoading: false }));
    }
  };

  const handleStartListening = () => {
    setTranscript("");
    setIsListening(true);
    
    const started = speechRecognition.start({
      language: chatState.language,
      onResult: (text) => {
        setTranscript(text);
      },
      onEnd: () => {
        setIsListening(false);
        if (transcript.trim()) {
          handleSendMessage(transcript.trim());
        }
      },
      onError: (error) => {
        console.error('Speech recognition error:', error);
        setIsListening(false);
      }
    });
    
    if (!started) {
      setIsListening(false);
    }
  };

  const handleStopListening = () => {
    speechRecognition.stop();
    setIsListening(false);
    if (transcript.trim()) {
      handleSendMessage(transcript.trim());
    }
  };

  // Add a welcome message when the chat first loads
  useEffect(() => {
    if (chatState.messages.length === 0) {
      const welcomeMessage = chatState.language === 'english'
        ? "Welcome to AI Sachiv! I'm here to help you with your Gram Panchayat work. You can type your questions or tap the microphone button to speak."
        : "एआई सचिव में आपका स्वागत है! मैं आपके ग्राम पंचायत के काम में आपकी मदद करने के लिए यहां हूं। आप अपने प्रश्न टाइप कर सकते हैं या बोलने के लिए माइक्रोफोन बटन पर टैप कर सकते हैं।";
        
      addMessage(welcomeMessage, 'assistant', "https://example.com/welcome-audio.mp3");
    }
  }, []);

  return (
    <div className="flex flex-col h-screen bg-gray-50">
      <Header language={chatState.language} onLanguageChange={handleLanguageChange} />
      
      <main className="flex-1 overflow-y-auto p-4">
        <div className="max-w-md mx-auto">
          {chatState.messages.map((message) => (
            <ChatMessage 
              key={message.id} 
              message={message} 
              language={chatState.language} 
            />
          ))}
          
          {isListening && (
            <div className="flex justify-center my-4">
              <div className="bg-white p-4 rounded-xl shadow-sm border border-gray-200">
                <p className="text-sachiv-gray text-center">
                  {chatState.language === 'english' ? 'Listening...' : 'सुन रहा हूँ...'}
                </p>
                {transcript && (
                  <p className="mt-2 text-center font-medium">{transcript}</p>
                )}
              </div>
            </div>
          )}
          
          {chatState.isLoading && (
            <div className="flex justify-center my-4">
              <div className="bg-white p-4 rounded-xl shadow-sm animate-pulse border border-gray-200">
                <p className="text-sachiv-gray text-center">
                  {chatState.language === 'english' ? 'Thinking...' : 'सोच रहा हूँ...'}
                </p>
              </div>
            </div>
          )}
          
          <div ref={messagesEndRef} />
        </div>
      </main>
      
      <footer className="border-t border-gray-200 bg-white p-4">
        <div className="max-w-md mx-auto">
          <div className="flex items-center justify-between mb-4">
            <p className="text-sachiv-gray">
              {chatState.language === 'english' 
                ? 'Tap and hold to speak' 
                : 'बोलने के लिए टैप करें और दबाकर रखें'}
            </p>
            <VoiceButton 
              isListening={isListening}
              onStartListening={handleStartListening}
              onStopListening={handleStopListening}
              language={chatState.language}
            />
          </div>
          
          <MessageInput 
            onSendMessage={handleSendMessage}
            isLoading={chatState.isLoading}
            language={chatState.language}
          />

          <p className="text-xs text-center mt-2 text-sachiv-gray">
            {chatState.language === 'english' 
              ? 'AI Sachiv - Your Gram Panchayat Assistant' 
              : 'एआई सचिव - आपका ग्राम पंचायत सहायक'}
          </p>
        </div>
      </footer>
    </div>
  );
}
